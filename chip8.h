#ifndef HEADER_FILE
#define HEADER_FILE

#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <stdbool.h>

//#define debug_print(fmt, ...) \
            if (debug) fprintf(stderr, fmt, ##__VA_ARGS__)

#define debug_print(...) \
            if (emu->debug) fprintf(stderr, __VA_ARGS__)


struct chip8 {
	//RAM
	uint8_t mem[4096];

	//Registers
	uint8_t V[16];
	uint16_t I;
	uint16_t pc;

	//Timers
	uint8_t delay_timer;
	uint8_t sound_timer;

	//Stack
	uint16_t stack[16];
	uint16_t sp;

	//Pubilc vars
	bool updateScreen;
	bool debug;
	uint8_t gfx[64 * 32];
	uint8_t keys[16];
    int wait_key;
};
#endif

uint8_t chip8_font[80] = {
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};
